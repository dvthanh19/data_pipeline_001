// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: file_schema.proto
// Protobuf Java Version: 4.27.2

package protobuf;

public final class FileSchema {
  private FileSchema() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      FileSchema.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Metadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string fileHash = 1;</code>
     * @return The fileHash.
     */
    java.lang.String getFileHash();
    /**
     * <code>string fileHash = 1;</code>
     * @return The bytes for fileHash.
     */
    com.google.protobuf.ByteString
        getFileHashBytes();

    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    java.lang.String getFileName();
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>string fileExt = 3;</code>
     * @return The fileExt.
     */
    java.lang.String getFileExt();
    /**
     * <code>string fileExt = 3;</code>
     * @return The bytes for fileExt.
     */
    com.google.protobuf.ByteString
        getFileExtBytes();

    /**
     * <code>float fileSize = 4;</code>
     * @return The fileSize.
     */
    float getFileSize();

    /**
     * <code>float chunkSize = 5;</code>
     * @return The chunkSize.
     */
    float getChunkSize();

    /**
     * <code>float chunkNum = 6;</code>
     * @return The chunkNum.
     */
    float getChunkNum();

    /**
     * <code>string chunkID = 7;</code>
     * @return The chunkID.
     */
    java.lang.String getChunkID();
    /**
     * <code>string chunkID = 7;</code>
     * @return The bytes for chunkID.
     */
    com.google.protobuf.ByteString
        getChunkIDBytes();
  }
  /**
   * Protobuf type {@code Metadata}
   */
  public static final class Metadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Metadata)
      MetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        Metadata.class.getName());
    }
    // Use Metadata.newBuilder() to construct.
    private Metadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Metadata() {
      fileHash_ = "";
      fileName_ = "";
      fileExt_ = "";
      chunkID_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FileSchema.internal_static_Metadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FileSchema.internal_static_Metadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FileSchema.Metadata.class, FileSchema.Metadata.Builder.class);
    }

    public static final int FILEHASH_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileHash_ = "";
    /**
     * <code>string fileHash = 1;</code>
     * @return The fileHash.
     */
    @java.lang.Override
    public java.lang.String getFileHash() {
      java.lang.Object ref = fileHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileHash_ = s;
        return s;
      }
    }
    /**
     * <code>string fileHash = 1;</code>
     * @return The bytes for fileHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileHashBytes() {
      java.lang.Object ref = fileHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileName_ = "";
    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    @java.lang.Override
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILEEXT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileExt_ = "";
    /**
     * <code>string fileExt = 3;</code>
     * @return The fileExt.
     */
    @java.lang.Override
    public java.lang.String getFileExt() {
      java.lang.Object ref = fileExt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileExt_ = s;
        return s;
      }
    }
    /**
     * <code>string fileExt = 3;</code>
     * @return The bytes for fileExt.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileExtBytes() {
      java.lang.Object ref = fileExt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileExt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILESIZE_FIELD_NUMBER = 4;
    private float fileSize_ = 0F;
    /**
     * <code>float fileSize = 4;</code>
     * @return The fileSize.
     */
    @java.lang.Override
    public float getFileSize() {
      return fileSize_;
    }

    public static final int CHUNKSIZE_FIELD_NUMBER = 5;
    private float chunkSize_ = 0F;
    /**
     * <code>float chunkSize = 5;</code>
     * @return The chunkSize.
     */
    @java.lang.Override
    public float getChunkSize() {
      return chunkSize_;
    }

    public static final int CHUNKNUM_FIELD_NUMBER = 6;
    private float chunkNum_ = 0F;
    /**
     * <code>float chunkNum = 6;</code>
     * @return The chunkNum.
     */
    @java.lang.Override
    public float getChunkNum() {
      return chunkNum_;
    }

    public static final int CHUNKID_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object chunkID_ = "";
    /**
     * <code>string chunkID = 7;</code>
     * @return The chunkID.
     */
    @java.lang.Override
    public java.lang.String getChunkID() {
      java.lang.Object ref = chunkID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chunkID_ = s;
        return s;
      }
    }
    /**
     * <code>string chunkID = 7;</code>
     * @return The bytes for chunkID.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChunkIDBytes() {
      java.lang.Object ref = chunkID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileHash_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, fileHash_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileExt_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, fileExt_);
      }
      if (java.lang.Float.floatToRawIntBits(fileSize_) != 0) {
        output.writeFloat(4, fileSize_);
      }
      if (java.lang.Float.floatToRawIntBits(chunkSize_) != 0) {
        output.writeFloat(5, chunkSize_);
      }
      if (java.lang.Float.floatToRawIntBits(chunkNum_) != 0) {
        output.writeFloat(6, chunkNum_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(chunkID_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, chunkID_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileHash_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, fileHash_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileExt_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, fileExt_);
      }
      if (java.lang.Float.floatToRawIntBits(fileSize_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, fileSize_);
      }
      if (java.lang.Float.floatToRawIntBits(chunkSize_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, chunkSize_);
      }
      if (java.lang.Float.floatToRawIntBits(chunkNum_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, chunkNum_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(chunkID_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, chunkID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FileSchema.Metadata)) {
        return super.equals(obj);
      }
      FileSchema.Metadata other = (FileSchema.Metadata) obj;

      if (!getFileHash()
          .equals(other.getFileHash())) return false;
      if (!getFileName()
          .equals(other.getFileName())) return false;
      if (!getFileExt()
          .equals(other.getFileExt())) return false;
      if (java.lang.Float.floatToIntBits(getFileSize())
          != java.lang.Float.floatToIntBits(
              other.getFileSize())) return false;
      if (java.lang.Float.floatToIntBits(getChunkSize())
          != java.lang.Float.floatToIntBits(
              other.getChunkSize())) return false;
      if (java.lang.Float.floatToIntBits(getChunkNum())
          != java.lang.Float.floatToIntBits(
              other.getChunkNum())) return false;
      if (!getChunkID()
          .equals(other.getChunkID())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILEHASH_FIELD_NUMBER;
      hash = (53 * hash) + getFileHash().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + FILEEXT_FIELD_NUMBER;
      hash = (53 * hash) + getFileExt().hashCode();
      hash = (37 * hash) + FILESIZE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFileSize());
      hash = (37 * hash) + CHUNKSIZE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChunkSize());
      hash = (37 * hash) + CHUNKNUM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChunkNum());
      hash = (37 * hash) + CHUNKID_FIELD_NUMBER;
      hash = (53 * hash) + getChunkID().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FileSchema.Metadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.Metadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.Metadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.Metadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.Metadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.Metadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.Metadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.Metadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FileSchema.Metadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FileSchema.Metadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FileSchema.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FileSchema.Metadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Metadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Metadata)
        FileSchema.MetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FileSchema.internal_static_Metadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FileSchema.internal_static_Metadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FileSchema.Metadata.class, FileSchema.Metadata.Builder.class);
      }

      // Construct using FileSchema.Metadata.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fileHash_ = "";
        fileName_ = "";
        fileExt_ = "";
        fileSize_ = 0F;
        chunkSize_ = 0F;
        chunkNum_ = 0F;
        chunkID_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FileSchema.internal_static_Metadata_descriptor;
      }

      @java.lang.Override
      public FileSchema.Metadata getDefaultInstanceForType() {
        return FileSchema.Metadata.getDefaultInstance();
      }

      @java.lang.Override
      public FileSchema.Metadata build() {
        FileSchema.Metadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public FileSchema.Metadata buildPartial() {
        FileSchema.Metadata result = new FileSchema.Metadata(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(FileSchema.Metadata result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fileHash_ = fileHash_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fileName_ = fileName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fileExt_ = fileExt_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.fileSize_ = fileSize_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.chunkSize_ = chunkSize_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.chunkNum_ = chunkNum_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.chunkID_ = chunkID_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FileSchema.Metadata) {
          return mergeFrom((FileSchema.Metadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FileSchema.Metadata other) {
        if (other == FileSchema.Metadata.getDefaultInstance()) return this;
        if (!other.getFileHash().isEmpty()) {
          fileHash_ = other.fileHash_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getFileExt().isEmpty()) {
          fileExt_ = other.fileExt_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getFileSize() != 0F) {
          setFileSize(other.getFileSize());
        }
        if (other.getChunkSize() != 0F) {
          setChunkSize(other.getChunkSize());
        }
        if (other.getChunkNum() != 0F) {
          setChunkNum(other.getChunkNum());
        }
        if (!other.getChunkID().isEmpty()) {
          chunkID_ = other.chunkID_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                fileHash_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                fileName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                fileExt_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 37: {
                fileSize_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                chunkSize_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                chunkNum_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 58: {
                chunkID_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object fileHash_ = "";
      /**
       * <code>string fileHash = 1;</code>
       * @return The fileHash.
       */
      public java.lang.String getFileHash() {
        java.lang.Object ref = fileHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileHash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileHash = 1;</code>
       * @return The bytes for fileHash.
       */
      public com.google.protobuf.ByteString
          getFileHashBytes() {
        java.lang.Object ref = fileHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileHash = 1;</code>
       * @param value The fileHash to set.
       * @return This builder for chaining.
       */
      public Builder setFileHash(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileHash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string fileHash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileHash() {
        fileHash_ = getDefaultInstance().getFileHash();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string fileHash = 1;</code>
       * @param value The bytes for fileHash to set.
       * @return This builder for chaining.
       */
      public Builder setFileHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileHash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>string fileName = 2;</code>
       * @return The fileName.
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        fileName_ = getDefaultInstance().getFileName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object fileExt_ = "";
      /**
       * <code>string fileExt = 3;</code>
       * @return The fileExt.
       */
      public java.lang.String getFileExt() {
        java.lang.Object ref = fileExt_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileExt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileExt = 3;</code>
       * @return The bytes for fileExt.
       */
      public com.google.protobuf.ByteString
          getFileExtBytes() {
        java.lang.Object ref = fileExt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileExt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileExt = 3;</code>
       * @param value The fileExt to set.
       * @return This builder for chaining.
       */
      public Builder setFileExt(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileExt_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string fileExt = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileExt() {
        fileExt_ = getDefaultInstance().getFileExt();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string fileExt = 3;</code>
       * @param value The bytes for fileExt to set.
       * @return This builder for chaining.
       */
      public Builder setFileExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileExt_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private float fileSize_ ;
      /**
       * <code>float fileSize = 4;</code>
       * @return The fileSize.
       */
      @java.lang.Override
      public float getFileSize() {
        return fileSize_;
      }
      /**
       * <code>float fileSize = 4;</code>
       * @param value The fileSize to set.
       * @return This builder for chaining.
       */
      public Builder setFileSize(float value) {

        fileSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float fileSize = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fileSize_ = 0F;
        onChanged();
        return this;
      }

      private float chunkSize_ ;
      /**
       * <code>float chunkSize = 5;</code>
       * @return The chunkSize.
       */
      @java.lang.Override
      public float getChunkSize() {
        return chunkSize_;
      }
      /**
       * <code>float chunkSize = 5;</code>
       * @param value The chunkSize to set.
       * @return This builder for chaining.
       */
      public Builder setChunkSize(float value) {

        chunkSize_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float chunkSize = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        chunkSize_ = 0F;
        onChanged();
        return this;
      }

      private float chunkNum_ ;
      /**
       * <code>float chunkNum = 6;</code>
       * @return The chunkNum.
       */
      @java.lang.Override
      public float getChunkNum() {
        return chunkNum_;
      }
      /**
       * <code>float chunkNum = 6;</code>
       * @param value The chunkNum to set.
       * @return This builder for chaining.
       */
      public Builder setChunkNum(float value) {

        chunkNum_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float chunkNum = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        chunkNum_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object chunkID_ = "";
      /**
       * <code>string chunkID = 7;</code>
       * @return The chunkID.
       */
      public java.lang.String getChunkID() {
        java.lang.Object ref = chunkID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          chunkID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string chunkID = 7;</code>
       * @return The bytes for chunkID.
       */
      public com.google.protobuf.ByteString
          getChunkIDBytes() {
        java.lang.Object ref = chunkID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string chunkID = 7;</code>
       * @param value The chunkID to set.
       * @return This builder for chaining.
       */
      public Builder setChunkID(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        chunkID_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>string chunkID = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkID() {
        chunkID_ = getDefaultInstance().getChunkID();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>string chunkID = 7;</code>
       * @param value The bytes for chunkID to set.
       * @return This builder for chaining.
       */
      public Builder setChunkIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        chunkID_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Metadata)
    }

    // @@protoc_insertion_point(class_scope:Metadata)
    private static final FileSchema.Metadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileSchema.Metadata();
    }

    public static FileSchema.Metadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Metadata>
        PARSER = new com.google.protobuf.AbstractParser<Metadata>() {
      @java.lang.Override
      public Metadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Metadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Metadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public FileSchema.Metadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DatachunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Datachunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Metadata header     = 1;
     * </pre>
     *
     * <code>string fileHash = 1;</code>
     * @return The fileHash.
     */
    java.lang.String getFileHash();
    /**
     * <pre>
     * Metadata header     = 1;
     * </pre>
     *
     * <code>string fileHash = 1;</code>
     * @return The bytes for fileHash.
     */
    com.google.protobuf.ByteString
        getFileHashBytes();

    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    java.lang.String getFileName();
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>string fileExt = 3;</code>
     * @return The fileExt.
     */
    java.lang.String getFileExt();
    /**
     * <code>string fileExt = 3;</code>
     * @return The bytes for fileExt.
     */
    com.google.protobuf.ByteString
        getFileExtBytes();

    /**
     * <code>float fileSize = 4;</code>
     * @return The fileSize.
     */
    float getFileSize();

    /**
     * <code>float chunkSize = 5;</code>
     * @return The chunkSize.
     */
    float getChunkSize();

    /**
     * <code>uint64 chunkNum = 6;</code>
     * @return The chunkNum.
     */
    long getChunkNum();

    /**
     * <code>string chunkID = 7;</code>
     * @return The chunkID.
     */
    java.lang.String getChunkID();
    /**
     * <code>string chunkID = 7;</code>
     * @return The bytes for chunkID.
     */
    com.google.protobuf.ByteString
        getChunkIDBytes();

    /**
     * <code>bytes body = 8;</code>
     * @return The body.
     */
    com.google.protobuf.ByteString getBody();
  }
  /**
   * Protobuf type {@code Datachunk}
   */
  public static final class Datachunk extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Datachunk)
      DatachunkOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        Datachunk.class.getName());
    }
    // Use Datachunk.newBuilder() to construct.
    private Datachunk(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Datachunk() {
      fileHash_ = "";
      fileName_ = "";
      fileExt_ = "";
      chunkID_ = "";
      body_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FileSchema.internal_static_Datachunk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FileSchema.internal_static_Datachunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FileSchema.Datachunk.class, FileSchema.Datachunk.Builder.class);
    }

    public static final int FILEHASH_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileHash_ = "";
    /**
     * <pre>
     * Metadata header     = 1;
     * </pre>
     *
     * <code>string fileHash = 1;</code>
     * @return The fileHash.
     */
    @java.lang.Override
    public java.lang.String getFileHash() {
      java.lang.Object ref = fileHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileHash_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Metadata header     = 1;
     * </pre>
     *
     * <code>string fileHash = 1;</code>
     * @return The bytes for fileHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileHashBytes() {
      java.lang.Object ref = fileHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileName_ = "";
    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    @java.lang.Override
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILEEXT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileExt_ = "";
    /**
     * <code>string fileExt = 3;</code>
     * @return The fileExt.
     */
    @java.lang.Override
    public java.lang.String getFileExt() {
      java.lang.Object ref = fileExt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileExt_ = s;
        return s;
      }
    }
    /**
     * <code>string fileExt = 3;</code>
     * @return The bytes for fileExt.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileExtBytes() {
      java.lang.Object ref = fileExt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileExt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILESIZE_FIELD_NUMBER = 4;
    private float fileSize_ = 0F;
    /**
     * <code>float fileSize = 4;</code>
     * @return The fileSize.
     */
    @java.lang.Override
    public float getFileSize() {
      return fileSize_;
    }

    public static final int CHUNKSIZE_FIELD_NUMBER = 5;
    private float chunkSize_ = 0F;
    /**
     * <code>float chunkSize = 5;</code>
     * @return The chunkSize.
     */
    @java.lang.Override
    public float getChunkSize() {
      return chunkSize_;
    }

    public static final int CHUNKNUM_FIELD_NUMBER = 6;
    private long chunkNum_ = 0L;
    /**
     * <code>uint64 chunkNum = 6;</code>
     * @return The chunkNum.
     */
    @java.lang.Override
    public long getChunkNum() {
      return chunkNum_;
    }

    public static final int CHUNKID_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object chunkID_ = "";
    /**
     * <code>string chunkID = 7;</code>
     * @return The chunkID.
     */
    @java.lang.Override
    public java.lang.String getChunkID() {
      java.lang.Object ref = chunkID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chunkID_ = s;
        return s;
      }
    }
    /**
     * <code>string chunkID = 7;</code>
     * @return The bytes for chunkID.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChunkIDBytes() {
      java.lang.Object ref = chunkID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODY_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes body = 8;</code>
     * @return The body.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileHash_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, fileHash_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileExt_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, fileExt_);
      }
      if (java.lang.Float.floatToRawIntBits(fileSize_) != 0) {
        output.writeFloat(4, fileSize_);
      }
      if (java.lang.Float.floatToRawIntBits(chunkSize_) != 0) {
        output.writeFloat(5, chunkSize_);
      }
      if (chunkNum_ != 0L) {
        output.writeUInt64(6, chunkNum_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(chunkID_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, chunkID_);
      }
      if (!body_.isEmpty()) {
        output.writeBytes(8, body_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileHash_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, fileHash_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileExt_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, fileExt_);
      }
      if (java.lang.Float.floatToRawIntBits(fileSize_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, fileSize_);
      }
      if (java.lang.Float.floatToRawIntBits(chunkSize_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, chunkSize_);
      }
      if (chunkNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, chunkNum_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(chunkID_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, chunkID_);
      }
      if (!body_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, body_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FileSchema.Datachunk)) {
        return super.equals(obj);
      }
      FileSchema.Datachunk other = (FileSchema.Datachunk) obj;

      if (!getFileHash()
          .equals(other.getFileHash())) return false;
      if (!getFileName()
          .equals(other.getFileName())) return false;
      if (!getFileExt()
          .equals(other.getFileExt())) return false;
      if (java.lang.Float.floatToIntBits(getFileSize())
          != java.lang.Float.floatToIntBits(
              other.getFileSize())) return false;
      if (java.lang.Float.floatToIntBits(getChunkSize())
          != java.lang.Float.floatToIntBits(
              other.getChunkSize())) return false;
      if (getChunkNum()
          != other.getChunkNum()) return false;
      if (!getChunkID()
          .equals(other.getChunkID())) return false;
      if (!getBody()
          .equals(other.getBody())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILEHASH_FIELD_NUMBER;
      hash = (53 * hash) + getFileHash().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + FILEEXT_FIELD_NUMBER;
      hash = (53 * hash) + getFileExt().hashCode();
      hash = (37 * hash) + FILESIZE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFileSize());
      hash = (37 * hash) + CHUNKSIZE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChunkSize());
      hash = (37 * hash) + CHUNKNUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChunkNum());
      hash = (37 * hash) + CHUNKID_FIELD_NUMBER;
      hash = (53 * hash) + getChunkID().hashCode();
      hash = (37 * hash) + BODY_FIELD_NUMBER;
      hash = (53 * hash) + getBody().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FileSchema.Datachunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.Datachunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.Datachunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.Datachunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.Datachunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.Datachunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.Datachunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.Datachunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FileSchema.Datachunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FileSchema.Datachunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FileSchema.Datachunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.Datachunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FileSchema.Datachunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Datachunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Datachunk)
        FileSchema.DatachunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FileSchema.internal_static_Datachunk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FileSchema.internal_static_Datachunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FileSchema.Datachunk.class, FileSchema.Datachunk.Builder.class);
      }

      // Construct using FileSchema.Datachunk.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fileHash_ = "";
        fileName_ = "";
        fileExt_ = "";
        fileSize_ = 0F;
        chunkSize_ = 0F;
        chunkNum_ = 0L;
        chunkID_ = "";
        body_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FileSchema.internal_static_Datachunk_descriptor;
      }

      @java.lang.Override
      public FileSchema.Datachunk getDefaultInstanceForType() {
        return FileSchema.Datachunk.getDefaultInstance();
      }

      @java.lang.Override
      public FileSchema.Datachunk build() {
        FileSchema.Datachunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public FileSchema.Datachunk buildPartial() {
        FileSchema.Datachunk result = new FileSchema.Datachunk(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(FileSchema.Datachunk result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fileHash_ = fileHash_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fileName_ = fileName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fileExt_ = fileExt_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.fileSize_ = fileSize_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.chunkSize_ = chunkSize_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.chunkNum_ = chunkNum_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.chunkID_ = chunkID_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.body_ = body_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FileSchema.Datachunk) {
          return mergeFrom((FileSchema.Datachunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FileSchema.Datachunk other) {
        if (other == FileSchema.Datachunk.getDefaultInstance()) return this;
        if (!other.getFileHash().isEmpty()) {
          fileHash_ = other.fileHash_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getFileExt().isEmpty()) {
          fileExt_ = other.fileExt_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getFileSize() != 0F) {
          setFileSize(other.getFileSize());
        }
        if (other.getChunkSize() != 0F) {
          setChunkSize(other.getChunkSize());
        }
        if (other.getChunkNum() != 0L) {
          setChunkNum(other.getChunkNum());
        }
        if (!other.getChunkID().isEmpty()) {
          chunkID_ = other.chunkID_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.getBody() != com.google.protobuf.ByteString.EMPTY) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                fileHash_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                fileName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                fileExt_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 37: {
                fileSize_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                chunkSize_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 48: {
                chunkNum_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                chunkID_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                body_ = input.readBytes();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object fileHash_ = "";
      /**
       * <pre>
       * Metadata header     = 1;
       * </pre>
       *
       * <code>string fileHash = 1;</code>
       * @return The fileHash.
       */
      public java.lang.String getFileHash() {
        java.lang.Object ref = fileHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileHash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Metadata header     = 1;
       * </pre>
       *
       * <code>string fileHash = 1;</code>
       * @return The bytes for fileHash.
       */
      public com.google.protobuf.ByteString
          getFileHashBytes() {
        java.lang.Object ref = fileHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Metadata header     = 1;
       * </pre>
       *
       * <code>string fileHash = 1;</code>
       * @param value The fileHash to set.
       * @return This builder for chaining.
       */
      public Builder setFileHash(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileHash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata header     = 1;
       * </pre>
       *
       * <code>string fileHash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileHash() {
        fileHash_ = getDefaultInstance().getFileHash();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata header     = 1;
       * </pre>
       *
       * <code>string fileHash = 1;</code>
       * @param value The bytes for fileHash to set.
       * @return This builder for chaining.
       */
      public Builder setFileHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileHash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>string fileName = 2;</code>
       * @return The fileName.
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        fileName_ = getDefaultInstance().getFileName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object fileExt_ = "";
      /**
       * <code>string fileExt = 3;</code>
       * @return The fileExt.
       */
      public java.lang.String getFileExt() {
        java.lang.Object ref = fileExt_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileExt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileExt = 3;</code>
       * @return The bytes for fileExt.
       */
      public com.google.protobuf.ByteString
          getFileExtBytes() {
        java.lang.Object ref = fileExt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileExt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileExt = 3;</code>
       * @param value The fileExt to set.
       * @return This builder for chaining.
       */
      public Builder setFileExt(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileExt_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string fileExt = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileExt() {
        fileExt_ = getDefaultInstance().getFileExt();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string fileExt = 3;</code>
       * @param value The bytes for fileExt to set.
       * @return This builder for chaining.
       */
      public Builder setFileExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileExt_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private float fileSize_ ;
      /**
       * <code>float fileSize = 4;</code>
       * @return The fileSize.
       */
      @java.lang.Override
      public float getFileSize() {
        return fileSize_;
      }
      /**
       * <code>float fileSize = 4;</code>
       * @param value The fileSize to set.
       * @return This builder for chaining.
       */
      public Builder setFileSize(float value) {

        fileSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float fileSize = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fileSize_ = 0F;
        onChanged();
        return this;
      }

      private float chunkSize_ ;
      /**
       * <code>float chunkSize = 5;</code>
       * @return The chunkSize.
       */
      @java.lang.Override
      public float getChunkSize() {
        return chunkSize_;
      }
      /**
       * <code>float chunkSize = 5;</code>
       * @param value The chunkSize to set.
       * @return This builder for chaining.
       */
      public Builder setChunkSize(float value) {

        chunkSize_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float chunkSize = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        chunkSize_ = 0F;
        onChanged();
        return this;
      }

      private long chunkNum_ ;
      /**
       * <code>uint64 chunkNum = 6;</code>
       * @return The chunkNum.
       */
      @java.lang.Override
      public long getChunkNum() {
        return chunkNum_;
      }
      /**
       * <code>uint64 chunkNum = 6;</code>
       * @param value The chunkNum to set.
       * @return This builder for chaining.
       */
      public Builder setChunkNum(long value) {

        chunkNum_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 chunkNum = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        chunkNum_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object chunkID_ = "";
      /**
       * <code>string chunkID = 7;</code>
       * @return The chunkID.
       */
      public java.lang.String getChunkID() {
        java.lang.Object ref = chunkID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          chunkID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string chunkID = 7;</code>
       * @return The bytes for chunkID.
       */
      public com.google.protobuf.ByteString
          getChunkIDBytes() {
        java.lang.Object ref = chunkID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string chunkID = 7;</code>
       * @param value The chunkID to set.
       * @return This builder for chaining.
       */
      public Builder setChunkID(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        chunkID_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>string chunkID = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkID() {
        chunkID_ = getDefaultInstance().getChunkID();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>string chunkID = 7;</code>
       * @param value The bytes for chunkID to set.
       * @return This builder for chaining.
       */
      public Builder setChunkIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        chunkID_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes body = 8;</code>
       * @return The body.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBody() {
        return body_;
      }
      /**
       * <code>bytes body = 8;</code>
       * @param value The body to set.
       * @return This builder for chaining.
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        body_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bytes body = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000080);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Datachunk)
    }

    // @@protoc_insertion_point(class_scope:Datachunk)
    private static final FileSchema.Datachunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileSchema.Datachunk();
    }

    public static FileSchema.Datachunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Datachunk>
        PARSER = new com.google.protobuf.AbstractParser<Datachunk>() {
      @java.lang.Override
      public Datachunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Datachunk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Datachunk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public FileSchema.Datachunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FileType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string fileHash = 1;</code>
     * @return The fileHash.
     */
    java.lang.String getFileHash();
    /**
     * <code>string fileHash = 1;</code>
     * @return The bytes for fileHash.
     */
    com.google.protobuf.ByteString
        getFileHashBytes();

    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    java.lang.String getFileName();
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>string fileExt = 3;</code>
     * @return The fileExt.
     */
    java.lang.String getFileExt();
    /**
     * <code>string fileExt = 3;</code>
     * @return The bytes for fileExt.
     */
    com.google.protobuf.ByteString
        getFileExtBytes();

    /**
     * <code>bool tracked = 4;</code>
     * @return The tracked.
     */
    boolean getTracked();
  }
  /**
   * Protobuf type {@code FileType}
   */
  public static final class FileType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:FileType)
      FileTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        FileType.class.getName());
    }
    // Use FileType.newBuilder() to construct.
    private FileType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private FileType() {
      fileHash_ = "";
      fileName_ = "";
      fileExt_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FileSchema.internal_static_FileType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FileSchema.internal_static_FileType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FileSchema.FileType.class, FileSchema.FileType.Builder.class);
    }

    public static final int FILEHASH_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileHash_ = "";
    /**
     * <code>string fileHash = 1;</code>
     * @return The fileHash.
     */
    @java.lang.Override
    public java.lang.String getFileHash() {
      java.lang.Object ref = fileHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileHash_ = s;
        return s;
      }
    }
    /**
     * <code>string fileHash = 1;</code>
     * @return The bytes for fileHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileHashBytes() {
      java.lang.Object ref = fileHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileName_ = "";
    /**
     * <code>string fileName = 2;</code>
     * @return The fileName.
     */
    @java.lang.Override
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>string fileName = 2;</code>
     * @return The bytes for fileName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILEEXT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fileExt_ = "";
    /**
     * <code>string fileExt = 3;</code>
     * @return The fileExt.
     */
    @java.lang.Override
    public java.lang.String getFileExt() {
      java.lang.Object ref = fileExt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileExt_ = s;
        return s;
      }
    }
    /**
     * <code>string fileExt = 3;</code>
     * @return The bytes for fileExt.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileExtBytes() {
      java.lang.Object ref = fileExt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileExt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRACKED_FIELD_NUMBER = 4;
    private boolean tracked_ = false;
    /**
     * <code>bool tracked = 4;</code>
     * @return The tracked.
     */
    @java.lang.Override
    public boolean getTracked() {
      return tracked_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileHash_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, fileHash_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileExt_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, fileExt_);
      }
      if (tracked_ != false) {
        output.writeBool(4, tracked_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileHash_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, fileHash_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, fileName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fileExt_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, fileExt_);
      }
      if (tracked_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, tracked_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FileSchema.FileType)) {
        return super.equals(obj);
      }
      FileSchema.FileType other = (FileSchema.FileType) obj;

      if (!getFileHash()
          .equals(other.getFileHash())) return false;
      if (!getFileName()
          .equals(other.getFileName())) return false;
      if (!getFileExt()
          .equals(other.getFileExt())) return false;
      if (getTracked()
          != other.getTracked()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILEHASH_FIELD_NUMBER;
      hash = (53 * hash) + getFileHash().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + FILEEXT_FIELD_NUMBER;
      hash = (53 * hash) + getFileExt().hashCode();
      hash = (37 * hash) + TRACKED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTracked());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FileSchema.FileType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.FileType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.FileType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.FileType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.FileType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.FileType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.FileType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.FileType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FileSchema.FileType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FileSchema.FileType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FileSchema.FileType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.FileType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FileSchema.FileType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FileType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FileType)
        FileSchema.FileTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FileSchema.internal_static_FileType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FileSchema.internal_static_FileType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FileSchema.FileType.class, FileSchema.FileType.Builder.class);
      }

      // Construct using FileSchema.FileType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fileHash_ = "";
        fileName_ = "";
        fileExt_ = "";
        tracked_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FileSchema.internal_static_FileType_descriptor;
      }

      @java.lang.Override
      public FileSchema.FileType getDefaultInstanceForType() {
        return FileSchema.FileType.getDefaultInstance();
      }

      @java.lang.Override
      public FileSchema.FileType build() {
        FileSchema.FileType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public FileSchema.FileType buildPartial() {
        FileSchema.FileType result = new FileSchema.FileType(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(FileSchema.FileType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fileHash_ = fileHash_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fileName_ = fileName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fileExt_ = fileExt_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.tracked_ = tracked_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FileSchema.FileType) {
          return mergeFrom((FileSchema.FileType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FileSchema.FileType other) {
        if (other == FileSchema.FileType.getDefaultInstance()) return this;
        if (!other.getFileHash().isEmpty()) {
          fileHash_ = other.fileHash_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getFileExt().isEmpty()) {
          fileExt_ = other.fileExt_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getTracked() != false) {
          setTracked(other.getTracked());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                fileHash_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                fileName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                fileExt_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                tracked_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object fileHash_ = "";
      /**
       * <code>string fileHash = 1;</code>
       * @return The fileHash.
       */
      public java.lang.String getFileHash() {
        java.lang.Object ref = fileHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileHash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileHash = 1;</code>
       * @return The bytes for fileHash.
       */
      public com.google.protobuf.ByteString
          getFileHashBytes() {
        java.lang.Object ref = fileHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileHash = 1;</code>
       * @param value The fileHash to set.
       * @return This builder for chaining.
       */
      public Builder setFileHash(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileHash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string fileHash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileHash() {
        fileHash_ = getDefaultInstance().getFileHash();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string fileHash = 1;</code>
       * @param value The bytes for fileHash to set.
       * @return This builder for chaining.
       */
      public Builder setFileHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileHash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>string fileName = 2;</code>
       * @return The fileName.
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        fileName_ = getDefaultInstance().getFileName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string fileName = 2;</code>
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object fileExt_ = "";
      /**
       * <code>string fileExt = 3;</code>
       * @return The fileExt.
       */
      public java.lang.String getFileExt() {
        java.lang.Object ref = fileExt_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileExt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fileExt = 3;</code>
       * @return The bytes for fileExt.
       */
      public com.google.protobuf.ByteString
          getFileExtBytes() {
        java.lang.Object ref = fileExt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileExt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fileExt = 3;</code>
       * @param value The fileExt to set.
       * @return This builder for chaining.
       */
      public Builder setFileExt(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fileExt_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string fileExt = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileExt() {
        fileExt_ = getDefaultInstance().getFileExt();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string fileExt = 3;</code>
       * @param value The bytes for fileExt to set.
       * @return This builder for chaining.
       */
      public Builder setFileExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fileExt_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private boolean tracked_ ;
      /**
       * <code>bool tracked = 4;</code>
       * @return The tracked.
       */
      @java.lang.Override
      public boolean getTracked() {
        return tracked_;
      }
      /**
       * <code>bool tracked = 4;</code>
       * @param value The tracked to set.
       * @return This builder for chaining.
       */
      public Builder setTracked(boolean value) {

        tracked_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bool tracked = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTracked() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tracked_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FileType)
    }

    // @@protoc_insertion_point(class_scope:FileType)
    private static final FileSchema.FileType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileSchema.FileType();
    }

    public static FileSchema.FileType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FileType>
        PARSER = new com.google.protobuf.AbstractParser<FileType>() {
      @java.lang.Override
      public FileType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FileType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public FileSchema.FileType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DirTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DirType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string dirName = 1;</code>
     * @return The dirName.
     */
    java.lang.String getDirName();
    /**
     * <code>string dirName = 1;</code>
     * @return The bytes for dirName.
     */
    com.google.protobuf.ByteString
        getDirNameBytes();

    /**
     * <code>repeated .FileType files = 2;</code>
     */
    java.util.List<FileSchema.FileType> 
        getFilesList();
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    FileSchema.FileType getFiles(int index);
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    int getFilesCount();
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    java.util.List<? extends FileSchema.FileTypeOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    FileSchema.FileTypeOrBuilder getFilesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DirType}
   */
  public static final class DirType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DirType)
      DirTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        DirType.class.getName());
    }
    // Use DirType.newBuilder() to construct.
    private DirType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DirType() {
      dirName_ = "";
      files_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FileSchema.internal_static_DirType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FileSchema.internal_static_DirType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FileSchema.DirType.class, FileSchema.DirType.Builder.class);
    }

    public static final int DIRNAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object dirName_ = "";
    /**
     * <code>string dirName = 1;</code>
     * @return The dirName.
     */
    @java.lang.Override
    public java.lang.String getDirName() {
      java.lang.Object ref = dirName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dirName_ = s;
        return s;
      }
    }
    /**
     * <code>string dirName = 1;</code>
     * @return The bytes for dirName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirNameBytes() {
      java.lang.Object ref = dirName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dirName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<FileSchema.FileType> files_;
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    @java.lang.Override
    public java.util.List<FileSchema.FileType> getFilesList() {
      return files_;
    }
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends FileSchema.FileTypeOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    @java.lang.Override
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    @java.lang.Override
    public FileSchema.FileType getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <code>repeated .FileType files = 2;</code>
     */
    @java.lang.Override
    public FileSchema.FileTypeOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(dirName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, dirName_);
      }
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(2, files_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(dirName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, dirName_);
      }
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, files_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FileSchema.DirType)) {
        return super.equals(obj);
      }
      FileSchema.DirType other = (FileSchema.DirType) obj;

      if (!getDirName()
          .equals(other.getDirName())) return false;
      if (!getFilesList()
          .equals(other.getFilesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DIRNAME_FIELD_NUMBER;
      hash = (53 * hash) + getDirName().hashCode();
      if (getFilesCount() > 0) {
        hash = (37 * hash) + FILES_FIELD_NUMBER;
        hash = (53 * hash) + getFilesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FileSchema.DirType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.DirType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.DirType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.DirType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.DirType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FileSchema.DirType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FileSchema.DirType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.DirType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FileSchema.DirType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FileSchema.DirType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FileSchema.DirType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FileSchema.DirType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FileSchema.DirType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DirType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DirType)
        FileSchema.DirTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FileSchema.internal_static_DirType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FileSchema.internal_static_DirType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FileSchema.DirType.class, FileSchema.DirType.Builder.class);
      }

      // Construct using FileSchema.DirType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        dirName_ = "";
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
        } else {
          files_ = null;
          filesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FileSchema.internal_static_DirType_descriptor;
      }

      @java.lang.Override
      public FileSchema.DirType getDefaultInstanceForType() {
        return FileSchema.DirType.getDefaultInstance();
      }

      @java.lang.Override
      public FileSchema.DirType build() {
        FileSchema.DirType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public FileSchema.DirType buildPartial() {
        FileSchema.DirType result = new FileSchema.DirType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(FileSchema.DirType result) {
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
      }

      private void buildPartial0(FileSchema.DirType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.dirName_ = dirName_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FileSchema.DirType) {
          return mergeFrom((FileSchema.DirType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FileSchema.DirType other) {
        if (other == FileSchema.DirType.getDefaultInstance()) return this;
        if (!other.getDirName().isEmpty()) {
          dirName_ = other.dirName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000002);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                dirName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                FileSchema.FileType m =
                    input.readMessage(
                        FileSchema.FileType.parser(),
                        extensionRegistry);
                if (filesBuilder_ == null) {
                  ensureFilesIsMutable();
                  files_.add(m);
                } else {
                  filesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object dirName_ = "";
      /**
       * <code>string dirName = 1;</code>
       * @return The dirName.
       */
      public java.lang.String getDirName() {
        java.lang.Object ref = dirName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dirName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string dirName = 1;</code>
       * @return The bytes for dirName.
       */
      public com.google.protobuf.ByteString
          getDirNameBytes() {
        java.lang.Object ref = dirName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dirName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string dirName = 1;</code>
       * @param value The dirName to set.
       * @return This builder for chaining.
       */
      public Builder setDirName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        dirName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string dirName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirName() {
        dirName_ = getDefaultInstance().getDirName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string dirName = 1;</code>
       * @param value The bytes for dirName to set.
       * @return This builder for chaining.
       */
      public Builder setDirNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        dirName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<FileSchema.FileType> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          files_ = new java.util.ArrayList<FileSchema.FileType>(files_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          FileSchema.FileType, FileSchema.FileType.Builder, FileSchema.FileTypeOrBuilder> filesBuilder_;

      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public java.util.List<FileSchema.FileType> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public FileSchema.FileType getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder setFiles(
          int index, FileSchema.FileType value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder setFiles(
          int index, FileSchema.FileType.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder addFiles(FileSchema.FileType value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder addFiles(
          int index, FileSchema.FileType value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder addFiles(
          FileSchema.FileType.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder addFiles(
          int index, FileSchema.FileType.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends FileSchema.FileType> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public FileSchema.FileType.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public FileSchema.FileTypeOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public java.util.List<? extends FileSchema.FileTypeOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public FileSchema.FileType.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            FileSchema.FileType.getDefaultInstance());
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public FileSchema.FileType.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, FileSchema.FileType.getDefaultInstance());
      }
      /**
       * <code>repeated .FileType files = 2;</code>
       */
      public java.util.List<FileSchema.FileType.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          FileSchema.FileType, FileSchema.FileType.Builder, FileSchema.FileTypeOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              FileSchema.FileType, FileSchema.FileType.Builder, FileSchema.FileTypeOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DirType)
    }

    // @@protoc_insertion_point(class_scope:DirType)
    private static final FileSchema.DirType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileSchema.DirType();
    }

    public static FileSchema.DirType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DirType>
        PARSER = new com.google.protobuf.AbstractParser<DirType>() {
      @java.lang.Override
      public DirType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DirType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DirType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public FileSchema.DirType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Metadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Metadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Datachunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Datachunk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FileType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FileType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DirType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DirType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021file_schema.proto\"\207\001\n\010Metadata\022\020\n\010file" +
      "Hash\030\001 \001(\t\022\020\n\010fileName\030\002 \001(\t\022\017\n\007fileExt\030" +
      "\003 \001(\t\022\020\n\010fileSize\030\004 \001(\002\022\021\n\tchunkSize\030\005 \001" +
      "(\002\022\020\n\010chunkNum\030\006 \001(\002\022\017\n\007chunkID\030\007 \001(\t\"\226\001" +
      "\n\tDatachunk\022\020\n\010fileHash\030\001 \001(\t\022\020\n\010fileNam" +
      "e\030\002 \001(\t\022\017\n\007fileExt\030\003 \001(\t\022\020\n\010fileSize\030\004 \001" +
      "(\002\022\021\n\tchunkSize\030\005 \001(\002\022\020\n\010chunkNum\030\006 \001(\004\022" +
      "\017\n\007chunkID\030\007 \001(\t\022\014\n\004body\030\010 \001(\014\"P\n\010FileTy" +
      "pe\022\020\n\010fileHash\030\001 \001(\t\022\020\n\010fileName\030\002 \001(\t\022\017" +
      "\n\007fileExt\030\003 \001(\t\022\017\n\007tracked\030\004 \001(\010\"4\n\007DirT" +
      "ype\022\017\n\007dirName\030\001 \001(\t\022\030\n\005files\030\002 \003(\0132\t.Fi" +
      "leTypeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Metadata_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Metadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Metadata_descriptor,
        new java.lang.String[] { "FileHash", "FileName", "FileExt", "FileSize", "ChunkSize", "ChunkNum", "ChunkID", });
    internal_static_Datachunk_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Datachunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Datachunk_descriptor,
        new java.lang.String[] { "FileHash", "FileName", "FileExt", "FileSize", "ChunkSize", "ChunkNum", "ChunkID", "Body", });
    internal_static_FileType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_FileType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_FileType_descriptor,
        new java.lang.String[] { "FileHash", "FileName", "FileExt", "Tracked", });
    internal_static_DirType_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_DirType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DirType_descriptor,
        new java.lang.String[] { "DirName", "Files", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
